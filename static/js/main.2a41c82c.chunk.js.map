{"version":3,"sources":["Configs/StaticData.ts","Containers/Welcomes/WelcomeMainEvent.tsx","Containers/Welcomes/Welcome1.tsx","Pages/Home.tsx","Pages/KorBook.tsx","Routes/index.tsx","Containers/Main.tsx","Containers/TopADContainer.tsx","Containers/HeaderBanner.tsx","Containers/QuickSearchEventList.tsx","Containers/Search.tsx","Containers/SearchContainer.tsx","Containers/HeaderForm.tsx","Components/Logo.tsx","Containers/HeaderLogo.tsx","Components/AllCategory.tsx","Components/HeaderNav.tsx","Containers/HeaderNavBar.tsx","Containers/Header.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["navItemList","id","displayName","href","mainEventList","list","WelcomeMainEvent","className","map","item","type","Welcome1","Home","KorBook","Root","path","exact","component","to","Main","Routes","TopADContainer","useState","isOn","setIsOn","onClick","event","HeaderBanner","dummy","QuickSearchEventList","nowNum","setNowNum","i","min","preventDefault","max","Math","floor","length","Search","role","aria-label","SearchContainer","HeaderForm","Logo","src","alt","HeaderLogo","AllCategory","HeaderNav","navlist","HeaderNavBar","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wPAIaA,EAAsB,CAC/B,CACIC,GAAG,IACHC,YAAa,2BACbC,KAAM,YAGV,CACIF,GAAG,KACHC,YAAa,2BACbC,KAAM,wBAEV,CACIF,GAAG,KACHC,YAAa,QACbC,KAAM,wBAEV,CACIF,GAAG,KACHC,YAAa,qBACbC,KAAM,wBAEV,CACIF,GAAG,KACHC,YAAa,qBACbC,KAAM,wBAEV,CACIF,GAAG,KACHC,YAAa,eACbC,KAAM,wBAEV,CACIF,GAAG,KACHC,YAAa,2BACbC,KAAM,yBAIDC,EAA6B,CACtC,CACIH,GAAG,OACHC,YAAa,6BACbG,KAAM,CACF,CACIJ,GAAG,SACHC,YAAa,qBACbC,KAAM,0BAIlB,CACIF,GAAG,OACHC,YAAa,qBACbG,KAAM,CACF,CACIJ,GAAG,SACHC,YAAa,qBACbC,KAAM,0BAIlB,CACIF,GAAG,OACHC,YAAa,iCACbG,KAAM,CACF,CACIJ,GAAG,SACHC,YAAa,qBACbC,KAAM,0BAIlB,CACIF,GAAG,OACHC,YAAa,4BACbG,KAAM,CACF,CACIJ,GAAG,SACHC,YAAa,qBACbC,KAAM,0BAIlB,CACIF,GAAG,OACHC,YAAa,QACbG,KAAM,CACF,CACIJ,GAAG,SACHC,YAAa,qBACbC,KAAM,0BAIlB,CACIF,GAAG,OACHC,YAAa,MACbG,KAAM,CACF,CACIJ,GAAG,SACHC,YAAa,qBACbC,KAAM,0BAIlB,CACIF,GAAG,OACHC,YAAa,2BACbG,KAAM,CACF,CACIJ,GAAG,SACHC,YAAa,2BACbC,KAAM,2BC3FPG,EAvBU,WAErB,OACI,yBAAKC,UAAU,6BACX,wBAAIA,UAAU,aAEVH,GACAA,EAAcI,KAAI,SAAAC,GACd,OACI,4BACI,4BAAQC,KAAK,UACRD,EAAKP,oBCAvBS,EAXE,WAEb,OACI,6BACI,yBAAKJ,UAAU,gBACX,kBAAC,EAAD,SCGDK,EARF,WACT,OACI,6BACI,kBAAC,EAAD,QCIGC,EARC,WACZ,OACI,oDCQOC,EARO,kBAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWL,IACjC,kBAAC,IAAD,CAAOG,KAAK,WAAWE,UAAWJ,IAClC,kBAAC,IAAD,CAAUE,KAAK,IAAIG,GAAG,QCIfC,EARF,WACT,OACI,0BAAMZ,UAAU,IACZ,kBAACa,EAAD,Q,OCWGC,EAhBQ,WAAO,IAAD,EAEDC,oBAAkB,GAFjB,mBAElBC,EAFkB,KAEZC,EAFY,KAQzB,OACI,yBAAKvB,GAAG,mBAAmBM,UAAW,KAAOgB,EAAO,KAAO,KACvD,yBAAKhB,UAAU,UAAf,4BACA,4BAAQG,KAAK,SAASH,UAAU,eAAekB,QAP9B,SAACC,GACtBF,GAAQ,KAMJ,kBCHGG,EARM,WACjB,OACI,yBAAKpB,UAAU,kBAAf,6BCDFqB,EAAgB,CAClB,CACI3B,GAAG,IACHC,YAAa,oDACbC,KAAM,wBAEV,CACIF,GAAG,KACHC,YAAa,qCACbC,KAAM,wBAEV,CACIF,GAAG,KACHC,YAAa,kCACbC,KAAM,wBAEV,CACIF,GAAG,KACHC,YAAa,sEACbC,KAAM,wBAEV,CACIF,GAAG,KACHC,YAAa,oDACbC,KAAM,yBA6DC0B,EAzDc,WACzB,IAD+B,EAGPP,mBAAkBM,GAHX,mBAGxBvB,EAHwB,aAIJiB,mBAAiB,IAJb,mBAIxBQ,EAJwB,KAIhBC,EAJgB,KA4B/B,OACI,yBAAKxB,UAAU,0BACX,wBAAIA,UAAU,gCAENF,GAAQA,EAAKG,KAAI,SAAEC,EAAMuB,GACrB,IAAMC,EAhCR,EAgCcH,EAGZ,OAAKG,GAAOD,GAAKA,EAFLC,EAjCd,GAuCM,4BACI,uBAAG9B,KAAMM,EAAKN,MACTM,EAAKP,kBAO9B,yBAAKK,UAAU,mCACX,4BAAQA,UAAU,OAAOkB,QA5Cb,SAACC,GAGrB,GAFAA,EAAMQ,iBAEFJ,EAAS,EACTC,EAAUD,EAAS,OAChB,CACH,IAAMK,EAAMC,KAAKC,MAAMhC,EAAKiC,OAXlB,GAYVP,EAAUI,MAqCN,KACA,4BAAQ5B,UAAU,OAAOkB,QAlCb,SAACC,GACrBA,EAAMQ,iBAEN,IAAMC,EAAMC,KAAKC,MAAMhC,EAAKiC,OAnBd,GAqBVP,EADAD,EAASK,EACCL,EAAS,EAET,KA2BN,QCjEDS,EAfA,WACX,OACI,yBAAKtC,GAAG,SAASM,UAAU,qBACvB,8BACI,yBAAKA,UAAU,kBACX,2BAAOG,KAAK,UAEhB,4BAAQA,KAAK,SAASH,UAAU,iBAC5B,0BAAMiC,KAAK,MAAMC,aAAW,gBAA5B,oBCGLC,EATS,WACpB,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGGC,EARI,WACf,OACI,yBAAKpC,UAAU,gBACX,kBAAC,EAAD,Q,OCSGqC,EAZF,WAGT,OACI,oCACI,kBAAC,IAAD,CAAM1B,GAAG,KACL,yBAAK2B,IALL,6BAKeC,IAAI,wCAAUvC,UAAU,yBCExCwC,EARI,WACf,OACI,yBAAKxC,UAAU,gBACX,kBAAC,EAAD,QCMGyC,EAVK,WAGhB,OACI,yBAAKzC,UAAU,gBACX,4BAAQG,KAAK,aCyBVuC,EArBG,SAAC,GAAuB,IAAtB5C,EAAqB,EAArBA,KAAqB,EACPiB,mBAAqBjB,GADd,mBAC9B6C,EAD8B,UAGrC,OACI,wBAAI3C,UAAU,kBAENF,GACA6C,EAAQ1C,KAAK,SAAAC,GACT,OACI,4BACI,kBAAC,IAAD,CAAMS,GAAIT,EAAKN,MACX,8BAAOM,EAAKP,oBCJ7BiD,EAXM,WACjB,IAAM9C,EAAOL,EAEb,OACI,yBAAKO,UAAU,kBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWF,KAAMA,MCId+C,EAXA,WACX,OACI,4BAAQnD,GAAG,mBAAmBM,UAAU,gBACpC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCQG8C,MAZf,WACE,OACE,yBAAK9C,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SCFY+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2a41c82c.chunk.js","sourcesContent":["import { ILink } from \"../Interfaces/ILink\";\r\nimport { IEventList } from \"Interfaces/IEventList\";\r\n\r\n\r\nexport const navItemList:ILink[] = [\r\n    {\r\n        id:'a',\r\n        displayName: '국내도서',\r\n        href: '/korbook'\r\n        \r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '외국도서',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: 'eBook',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '웹소설',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '기프트',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '음반',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '중고장터',\r\n        href: 'http://www.naver.com'\r\n    },\r\n];\r\n\r\nexport const mainEventList:IEventList[] = [\r\n    {\r\n        id:'asdf',\r\n        displayName: '요즘 이 책',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '좋은책',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:'asdf',\r\n        displayName: '핫이슈',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '좋은책',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:'asdf',\r\n        displayName: '새로나온책',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '좋은책',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:'asdf',\r\n        displayName: '기획/테마',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '좋은책',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:'asdf',\r\n        displayName: 'ebook',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '좋은책',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:'asdf',\r\n        displayName: 'sam',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '좋은책',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:'asdf',\r\n        displayName: '한정특가',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '한정특가',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    }\r\n]","import React from 'react';\r\nimport { mainEventList } from 'Configs/StaticData';\r\n\r\nconst WelcomeMainEvent = () => {\r\n\r\n    return(\r\n        <div className=\"webcome_main_evnet_height\">\r\n            <ul className=\"item-list\">\r\n            {\r\n                mainEventList &&\r\n                mainEventList.map(item => {\r\n                    return (\r\n                        <li>\r\n                            <button type='button'>\r\n                                {item.displayName}\r\n                            </button>\r\n                        </li>\r\n                    )\r\n                })\r\n                \r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WelcomeMainEvent;","import React from 'react';\r\nimport WelcomeMainEvent from './WelcomeMainEvent';\r\n\r\nconst Welcome1 = () => {\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"container_lg\">\r\n                <WelcomeMainEvent />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome1;","import React from 'react';\r\nimport Welcome1 from 'Containers/Welcomes/Welcome1';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Welcome1 />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst KorBook = () => {\r\n    return (\r\n        <div>\r\n            한국책\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default KorBook;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Redirect, Switch  } from \"react-router-dom\";\r\nimport {Home, KorBook} from \"Pages\";\r\n\r\nconst Root:React.FC = () => (\r\n    <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/korbook\" component={KorBook} />\r\n        <Redirect path=\"*\" to=\"/\" />\r\n    </Switch>\r\n)\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport Routes from \"Routes\";\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main className=\"\">\r\n            <Routes />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, { useState } from 'react';\r\n\r\nconst TopADContainer = () => {\r\n\r\n    const [isOn, setIsOn] = useState<boolean>(true);\r\n\r\n    const handleCloseClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>):void => {\r\n        setIsOn(false);\r\n    }\r\n\r\n    return (\r\n        <div id=\"container-top-ad\" className={\" \" + (isOn ? 'on' : '')}>\r\n            <div className=\"script\">광고에요</div>\r\n            <button type=\"button\" className=\"close-button\" onClick={handleCloseClick}>닫기</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopADContainer;","import React from 'react';\r\n\r\nconst HeaderBanner = () => {\r\n    return (\r\n        <div className=\"header__banner\">\r\n            배너광고\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderBanner;","import React, { useState, EventHandler, MouseEvent } from 'react';\r\nimport { ILink } from '../Interfaces/ILink';\r\n\r\nconst dummy:ILink[] = [\r\n    {\r\n        id:'a',\r\n        displayName: '프로그램 완전정복',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: 'js 완전 잘하기',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '김재성 신작',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '삼성화재 이대로괜찮은가',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '똑똑한사람의 선택',\r\n        href: 'http://www.naver.com'\r\n    },\r\n]\r\n\r\nconst QuickSearchEventList = () => {\r\n    const maxLength = 4;\r\n\r\n    const [list, setList] = useState<ILink[]>(dummy);\r\n    const [nowNum, setNowNum]= useState<number>(0);\r\n\r\n    const handlePrevClick = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>):void => {\r\n        event.preventDefault();\r\n\r\n        if (nowNum > 0) {\r\n            setNowNum(nowNum - 1);\r\n        } else {\r\n            const max = Math.floor(list.length / maxLength);\r\n            setNowNum(max);\r\n        }\r\n        \r\n    }\r\n    const handleNextClick = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>):void => {\r\n        event.preventDefault();\r\n\r\n        const max = Math.floor(list.length / maxLength);\r\n        if (nowNum < max) {\r\n            setNowNum(nowNum + 1);\r\n        } else {\r\n            setNowNum(0);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container-quick-search\">\r\n            <ul className=\"container-quick-search__list\">\r\n                {\r\n                    list && list.map(( item, i ) => {\r\n                        const min = nowNum * maxLength;\r\n                        const max = min + maxLength;\r\n\r\n                        if(!(min <= i && i < max)) {\r\n                            return false;\r\n                        }\r\n                        return (\r\n                            <li>\r\n                                <a href={item.href}>\r\n                                    {item.displayName}\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n            <div className=\"container-quick-search__buttons\">\r\n                <button className=\"prev\" onClick={handlePrevClick}>-</button>\r\n                <button className=\"next\" onClick={handleNextClick}>+</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuickSearchEventList;","import React from 'react';\r\n\r\nconst Search = () => {\r\n    return (\r\n        <div id=\"search\" className=\"container__search\">\r\n            <form>\r\n                <div className=\"wapper__search\">\r\n                    <input type=\"text\"></input>\r\n                </div>\r\n                <button type=\"submit\" className=\"search-button\">\r\n                    <span role=\"img\" aria-label=\"찾기\">🔍</span>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport QuickSearchEventList from './QuickSearchEventList';\r\nimport Search from './Search';\r\n\r\nconst SearchContainer = () => {\r\n    return (\r\n        <div>\r\n            <QuickSearchEventList />\r\n            <Search />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport SearchContainer from './SearchContainer';\r\n\r\nconst HeaderForm = () => {\r\n    return (\r\n        <div className=\"header__form\">\r\n            <SearchContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderForm;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Logo = () => {\r\n    const src = 'assets/images/minilogo.png';\r\n\r\n    return (\r\n        <>\r\n            <Link to='/'>\r\n                <img src={src} alt=\"미니문고 로고\" className=\"header__logo__img\"/>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport Logo from '../Components/Logo';\r\n\r\nconst HeaderLogo = () => {\r\n    return (\r\n        <div className=\"header__logo\">\r\n            <Logo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderLogo;","import React from 'react';\r\n\r\nconst AllCategory = () => {\r\n    \r\n\r\n    return (\r\n        <div className=\"all-category\">\r\n            <button type=\"button\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllCategory;","import React, { useState } from 'react';\r\nimport AllCategory from './AllCategory';\r\nimport { ILink } from '../Interfaces/ILink';\r\nimport { INavItem } from '../Interfaces/INavItem';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\ninterface IHeaderNav {\r\n    list:INavItem[]\r\n}\r\n\r\nconst HeaderNav = ({list}:IHeaderNav) => {\r\n    const [navlist, setNavList] = useState<INavItem[]>(list);\r\n\r\n    return (\r\n        <ul className=\"header__navbar\">\r\n            {\r\n                list && \r\n                navlist.map((item => {\r\n                    return (\r\n                        <li>\r\n                            <Link to={item.href}>\r\n                                <span>{item.displayName}</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                }))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default HeaderNav;","import React from 'react';\r\nimport AllCategory from '../Components/AllCategory';\r\nimport HeaderNav from '../Components/HeaderNav';\r\nimport { navItemList } from 'Configs/StaticData';\r\n\r\n\r\n\r\nconst HeaderNavBar = () => {\r\n    const list = navItemList;\r\n    \r\n    return (\r\n        <div className=\"header__navbar\">\r\n            <AllCategory />\r\n            <HeaderNav list={list} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderNavBar;","import React from 'react';\r\nimport HeaderBanner from './HeaderBanner';\r\nimport HeaderForm from './HeaderForm';\r\nimport HeaderLogo from './HeaderLogo';\r\nimport HeaderNavBar from './HeaderNavBar';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header id=\"container_header\" className=\"container_lg\">\r\n            <HeaderLogo />\r\n            <HeaderBanner />\r\n            <HeaderForm />\r\n            <HeaderNavBar />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../Styles/index.scss'\r\n\r\nimport Main from '../Containers/Main';\r\nimport TopADContainer from '../Containers/TopADContainer';\r\nimport Header from '../Containers/Header';\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TopADContainer />\r\n      <Router>\r\n        <Header />\r\n        <Main />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}