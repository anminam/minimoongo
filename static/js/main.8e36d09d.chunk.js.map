{"version":3,"sources":["Components/Slider.tsx","Core/Utils.ts","Containers/Welcomes/WelcomeMainEvent.tsx","Configs/StaticData.ts","Containers/Welcomes/Welcome1.tsx","Pages/Home.tsx","Pages/KorBook.tsx","Pages/OtherBook.tsx","Pages/EBook.tsx","Pages/WebnovelBook.tsx","Routes/index.tsx","Containers/Main.tsx","Containers/HeaderBanner.tsx","Containers/QuickSearchEventList.tsx","Containers/Search.tsx","Containers/SearchContainer.tsx","Containers/HeaderForm.tsx","Components/Logo.tsx","Containers/HeaderLogo.tsx","Components/AllCategory.tsx","Components/HeaderNav.tsx","Containers/HeaderNavBar.tsx","Containers/Header.tsx","Components/TopBannerContainer.tsx","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Slider","list","onNextItem","onPrevItem","useState","setOnItem","viewIndex","setViewIndex","isVisibleButton","setIsVisibleButton","useEffect","handleMouseOver","event","id","target","obj","find","item","index","className","onMouseOver","onMouseLeave","style","width","length","map","subItem","key","displayName","onClick","Utils","findObject","array","pItem","findIndex","nextIndex","prevIndex","len","WelcomeMainEvent","props","setItem","prevItem","nextItem","type","navItemList","href","mainEventList","Welcome1","Home","KorBook","OtherBook","EBook","WebnovelBook","Root","path","exact","component","to","Main","Routes","HeaderBanner","dummy","QuickSearchEventList","nowNum","setNowNum","i","min","preventDefault","max","Math","floor","Search","role","aria-label","SearchContainer","HeaderForm","Logo","src","alt","HeaderLogo","AllCategory","HeaderNav","navlist","HeaderNavBar","Header","TopBannerContainer","isOn","setIsOn","height","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e36d09d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ILink } from 'Interfaces/ILink';\r\n\r\ninterface ISlider {\r\n    list: ILink[];\r\n    onNextItem?: () => void;\r\n    onPrevItem?: () => void;\r\n}\r\nconst Slider = ({list, onNextItem, onPrevItem}:ISlider) => {\r\n\r\n    const [onItem, setOnItem] = useState<ILink | null>(null);\r\n    const [viewIndex, setViewIndex] = useState<number>(0);\r\n    const [isVisibleButton, setIsVisibleButton] = useState<Boolean>(false);\r\n\r\n    useEffect(()=> {\r\n        setOnItem(list[0]);\r\n        setViewIndex(0);\r\n    }, [list]);\r\n\r\n    const handleMouseOver = (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\r\n        const target = event.target as Element\r\n        const {id} = target;\r\n\r\n        const obj = list?.find((item, index) => {\r\n            if (item.id === id) {\r\n                setViewIndex(index);\r\n                return true;\r\n            }\r\n        });\r\n\r\n        if (obj) {\r\n            setOnItem(obj);\r\n        }\r\n    }\r\n\r\n    const handlePrevClick = () => {\r\n        if(viewIndex === 0) {\r\n            if (onPrevItem) {\r\n                onPrevItem();\r\n            }\r\n            return;\r\n        }\r\n        setViewIndex(viewIndex - 1);\r\n    }\r\n    const handleNextClick = () => {\r\n        if(viewIndex >= list.length - 1) {\r\n            if (onNextItem) {\r\n                onNextItem();\r\n            }\r\n            return;\r\n        }\r\n        setViewIndex(viewIndex + 1);\r\n\r\n    }\r\n\r\n    const handleViewMouseOver = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        setIsVisibleButton(true);\r\n    }\r\n    const handleViewMouseLeave = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        setIsVisibleButton(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"slider\" onMouseOver={handleViewMouseOver} onMouseLeave={handleViewMouseLeave}>\r\n            <div className=\"view-container\" style={{width: 700 * list.length}} >\r\n                <ul style={{'marginLeft': -(700 * viewIndex)}}>\r\n                {\r\n                    list &&\r\n                    list.map((subItem)=> {\r\n                        return (\r\n                            <li key={subItem.id}>{subItem.displayName}</li>\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n            <div className=\"dots\">\r\n                <div className=\"dots-wapper\">\r\n                    <ul className=\"bullet\">\r\n                        {\r\n                            list && list.length > 1 &&\r\n                            list.map((subItem, index)=> {\r\n                                return (\r\n                                    <li key={subItem.id} id={subItem.id} className={index === viewIndex ? 'on': ''} onMouseOver={handleMouseOver}>{subItem.displayName}</li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n            <button className={`prev ${!isVisibleButton ? 'invisible': ''}`} onClick={handlePrevClick}></button>\r\n            <button className={`next ${!isVisibleButton ? 'invisible': ''}`} onClick={handleNextClick}></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider;","interface IObject {\r\n    id: string\r\n}\r\nexport class Utils {\r\n    public static findObject = <T extends IObject>(array: T[], id:string ) => {\r\n        return array?.find(pItem => pItem.id === id);\r\n    }\r\n    public static  findIndex = <T extends IObject>(array: T[], id:string ):number => {\r\n        return array?.findIndex(pItem => pItem.id === id);\r\n    }\r\n    public static nextIndex = <T extends IObject>(array: T[], index:number):number => {\r\n        const len = array.length;\r\n        return index >= len -1 ? 0 : index + 1;\r\n    }\r\n    public static prevIndex = <T extends IObject>(array: T[], index:number):number => {\r\n        const len = array.length;\r\n        return index === 0 ? len -1 : index -1;\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { IEventListItem } from 'Interfaces/IEventList';\r\nimport Slider from 'Components/Slider';\r\nimport { Utils } from 'Core/Utils';\r\n\r\ninterface IWelcomeMainEvent {\r\n    list:IEventListItem[]\r\n}\r\n\r\nconst WelcomeMainEvent = (props:IWelcomeMainEvent) => {\r\n\r\n    const [list] = useState<IEventListItem[]>(props.list);\r\n    const [item, setItem] = useState<IEventListItem>(props.list[0]);\r\n    const [selectIndex, setSelectIndex] = useState<number>(0);\r\n\r\n    useEffect(()=> {\r\n        setItem(props.list[0]);\r\n    }, [props.list] );\r\n\r\n    const handleMouseOver = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        const target = event.target as Element\r\n        const {id} = target;\r\n\r\n        const obj = list?.find(item => item.id === id);\r\n        if (obj) {\r\n            setItem(obj);\r\n        }\r\n    }\r\n\r\n    const handlePrevItem = () => {\r\n        prevItem();\r\n    }\r\n\r\n    const handleNextItem = () => {\r\n        nextItem();\r\n    }\r\n\r\n    const prevItem = () => {\r\n        const index = Utils.findIndex(list, item.id);\r\n        const nextIndex = Utils.prevIndex(list, index);\r\n        setItem(list[nextIndex]);\r\n    }\r\n\r\n    const nextItem = () => {\r\n        const index = Utils.findIndex(list, item.id);\r\n        const nextIndex = Utils.nextIndex(list, index);\r\n        setItem(list[nextIndex]);\r\n    }\r\n\r\n    return(\r\n        <div className=\"webcome_main_evnet_height\">\r\n            <Slider list={item.list} onNextItem={handleNextItem} onPrevItem={handlePrevItem}/>\r\n            <ul className=\"item-list\">\r\n            {\r\n                list &&\r\n                list.map((pItem) => {\r\n                    return (\r\n                        <li key={pItem.id} >\r\n                            <button type='button' id={pItem.id} className={`${pItem.id === item.id ? 'on' : ''} `} onMouseOver={\r\n                                handleMouseOver\r\n                            }>\r\n                                {pItem.displayName}\r\n                            </button>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WelcomeMainEvent;","import { ILink } from \"../Interfaces/ILink\";\r\nimport { IEventListItem } from \"Interfaces/IEventList\";\r\n\r\n\r\nexport const navItemList:ILink[] = [\r\n    {\r\n        id:'a',\r\n        displayName: '국내도서',\r\n        href: '/korbook'\r\n        \r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '외국도서',\r\n        href: '/otherbook'\r\n    },\r\n    {\r\n        id:'abc',\r\n        displayName: 'eBook',\r\n        href: '/ebook'\r\n    },\r\n    {\r\n        id:'abd',\r\n        displayName: '웹소설',\r\n        href: 'webnovel'\r\n    },\r\n    {\r\n        id:'abe',\r\n        displayName: '기프트',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'abf',\r\n        displayName: '음반',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'abg',\r\n        displayName: '중고장터',\r\n        href: 'http://www.naver.com'\r\n    },\r\n];\r\n\r\nexport const mainEventList:IEventListItem[] = [\r\n    {\r\n        id:'a1',\r\n        displayName: '요즘 이 책',\r\n        list: [\r\n            {\r\n                id:'a1',\r\n                displayName: '안녕',\r\n                href: 'http://www.naver.com'\r\n            },\r\n            {\r\n                id:'a2',\r\n                displayName: '나도안녕',\r\n                href: 'http://www.naver.com'\r\n            },\r\n            {\r\n                id:'a3',\r\n                displayName: '너도',\r\n                href: 'http://www.naver.com'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        id:'a2',\r\n        displayName: '핫이슈',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '하니슈',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:'a3',\r\n        displayName: '새로나온책',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '좋은책',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:'a4',\r\n        displayName: '기획/테마',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '좋은책',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:'a5',\r\n        displayName: 'ebook',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '좋은책',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:'a6',\r\n        displayName: 'sam',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '좋은책',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id:'a7',\r\n        displayName: '한정특가',\r\n        list: [\r\n            {\r\n                id:'123213',\r\n                displayName: '한정특가',\r\n                href: 'http://www.naver.com'\r\n            }\r\n        ]\r\n    }\r\n]","import React from 'react';\r\nimport WelcomeMainEvent from './WelcomeMainEvent';\r\nimport { mainEventList } from 'Configs/StaticData';\r\n\r\nconst Welcome1 = () => {\r\n    return(\r\n        <div>\r\n            <div className=\"container_lg\">\r\n                <WelcomeMainEvent list={mainEventList}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome1;","import React from 'react';\r\nimport Welcome1 from 'Containers/Welcomes/Welcome1';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Welcome1 />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst KorBook = () => {\r\n    return (\r\n        <div className=\"container_lg\">\r\n            한국책\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default KorBook;","import React from 'react';\r\n\r\nconst OtherBook = () => {\r\n    return (\r\n        <div className=\"container_lg\">\r\n            외국도서맨\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OtherBook;","import React from 'react';\r\n\r\nconst EBook = () => {\r\n    return (\r\n        <div className=\"container_lg\">\r\n            이북\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EBook;","import React from 'react';\r\n\r\nconst WebnovelBook = () => {\r\n    return (\r\n        <div className=\"container_lg\">\r\n            웹소설\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WebnovelBook;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Redirect, Switch  } from \"react-router-dom\";\r\nimport {Home, KorBook, OtherBook, EBook, WebnovelBook} from \"Pages\";\r\n\r\nconst Root:React.FC = () => (\r\n    <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/korbook\" component={KorBook} />\r\n        <Route path=\"/otherbook\" component={OtherBook} />\r\n        <Route path=\"/ebook\" component={EBook} />\r\n        <Route path=\"/webnovel\" component={WebnovelBook} />\r\n        <Redirect path=\"*\" to=\"/\" />\r\n    </Switch>\r\n)\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport Routes from \"Routes\";\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main className=\"\">\r\n            <Routes />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nconst HeaderBanner = () => {\r\n    return (\r\n        <div className=\"header__banner\">\r\n            배너광고\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderBanner;","import React, { useState, EventHandler, MouseEvent } from 'react';\r\nimport { ILink } from '../Interfaces/ILink';\r\n\r\nconst dummy:ILink[] = [\r\n    {\r\n        id:'a',\r\n        displayName: '프로그램 완전정복',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: 'js 완전 잘하기',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '김재성 신작',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '삼성화재 이대로괜찮은가',\r\n        href: 'http://www.naver.com'\r\n    },\r\n    {\r\n        id:'ab',\r\n        displayName: '똑똑한사람의 선택',\r\n        href: 'http://www.naver.com'\r\n    },\r\n]\r\n\r\nconst QuickSearchEventList = () => {\r\n    const maxLength = 4;\r\n\r\n    const [list, setList] = useState<ILink[]>(dummy);\r\n    const [nowNum, setNowNum]= useState<number>(0);\r\n\r\n    const handlePrevClick = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>):void => {\r\n        event.preventDefault();\r\n\r\n        if (nowNum > 0) {\r\n            setNowNum(nowNum - 1);\r\n        } else {\r\n            const max = Math.floor(list.length / maxLength);\r\n            setNowNum(max);\r\n        }\r\n        \r\n    }\r\n    const handleNextClick = (event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>):void => {\r\n        event.preventDefault();\r\n\r\n        const max = Math.floor(list.length / maxLength);\r\n        if (nowNum < max) {\r\n            setNowNum(nowNum + 1);\r\n        } else {\r\n            setNowNum(0);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container-quick-search\">\r\n            <ul className=\"container-quick-search__list\">\r\n                {\r\n                    list && list.map(( item, i ) => {\r\n                        const min = nowNum * maxLength;\r\n                        const max = min + maxLength;\r\n\r\n                        if(!(min <= i && i < max)) {\r\n                            return false;\r\n                        }\r\n                        return (\r\n                            <li key={item.id}>\r\n                                <a href={item.href}>\r\n                                    {item.displayName}\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n            <div className=\"container-quick-search__buttons\">\r\n                <button className=\"prev\" onClick={handlePrevClick}>-</button>\r\n                <button className=\"next\" onClick={handleNextClick}>+</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuickSearchEventList;","import React from 'react';\r\n\r\nconst Search = () => {\r\n    return (\r\n        <div id=\"search\" className=\"container__search\">\r\n            <form>\r\n                <div className=\"wapper__search\">\r\n                    <input type=\"text\"></input>\r\n                </div>\r\n                <button type=\"submit\" className=\"search-button\">\r\n                    <span role=\"img\" aria-label=\"찾기\">🔍</span>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport QuickSearchEventList from './QuickSearchEventList';\r\nimport Search from './Search';\r\n\r\nconst SearchContainer = () => {\r\n    return (\r\n        <div>\r\n            <QuickSearchEventList />\r\n            <Search />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport SearchContainer from './SearchContainer';\r\n\r\nconst HeaderForm = () => {\r\n    return (\r\n        <div className=\"header__form\">\r\n            <SearchContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderForm;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Logo = () => {\r\n    const src = 'assets/images/minilogo.png';\r\n\r\n    return (\r\n        <>\r\n            <Link to='/'>\r\n                <img src={src} alt=\"미니문고 로고\" className=\"header__logo__img\"/>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport Logo from '../Components/Logo';\r\n\r\nconst HeaderLogo = () => {\r\n    return (\r\n        <div className=\"header__logo\">\r\n            <Logo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderLogo;","import React from 'react';\r\n\r\nconst AllCategory = () => {\r\n    \r\n\r\n    return (\r\n        <div className=\"all-category\">\r\n            <button type=\"button\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllCategory;","import React, { useState } from 'react';\r\nimport AllCategory from './AllCategory';\r\nimport { ILink } from '../Interfaces/ILink';\r\nimport { INavItem } from '../Interfaces/INavItem';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\ninterface IHeaderNav {\r\n    list:INavItem[]\r\n}\r\n\r\nconst HeaderNav = ({list}:IHeaderNav) => {\r\n    const [navlist, setNavList] = useState<INavItem[]>(list);\r\n\r\n    return (\r\n        <ul className=\"header__navbar\">\r\n            {\r\n                list && \r\n                navlist.map((item => {\r\n                    return (\r\n                        <li>\r\n                            <Link key={item.id} to={item.href}>\r\n                                <span>{item.displayName}</span>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                }))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default HeaderNav;","import React from 'react';\r\nimport AllCategory from '../Components/AllCategory';\r\nimport HeaderNav from '../Components/HeaderNav';\r\nimport { navItemList } from 'Configs/StaticData';\r\n\r\n\r\n\r\nconst HeaderNavBar = () => {\r\n    const list = navItemList;\r\n    \r\n    return (\r\n        <div className=\"header__navbar\">\r\n            <AllCategory />\r\n            <HeaderNav list={list} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderNavBar;","import React from 'react';\r\nimport HeaderBanner from './HeaderBanner';\r\nimport HeaderForm from './HeaderForm';\r\nimport HeaderLogo from './HeaderLogo';\r\nimport HeaderNavBar from './HeaderNavBar';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header id=\"container_header\" className=\"container_lg\">\r\n            <HeaderLogo />\r\n            <HeaderBanner />\r\n            <HeaderForm />\r\n            <HeaderNavBar />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\n\r\nconst TopBannerContainer = () => {\r\n\r\n    const src = 'assets/images/top-banner.png';\r\n    const [isOn, setIsOn] = useState<boolean>(true);\r\n\r\n    const handleCloseClick = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>):void => {\r\n        setIsOn(false);\r\n    }\r\n\r\n    return (\r\n        <div id=\"container-top-banner\" className={\" \" + (isOn ? 'on' : '')}>\r\n            <div className=\"background\">\r\n                <div className=\"left\"></div>\r\n                <div className=\"right\"></div>\r\n            </div>\r\n            <img className=\"container-top-banner__img\" src={src} alt=\"광고맨\" style={{height: '65px'}}/>\r\n            <button type=\"button\" className=\"close-button\" onClick={handleCloseClick}>닫기</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBannerContainer;","import React from 'react';\r\nimport '../Styles/index.scss'\r\n\r\nimport Main from '../Containers/Main';\r\n\r\nimport Header from '../Containers/Header';\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport TopBannerContainer from 'Components/TopBannerContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TopBannerContainer />\r\n      <Router>\r\n        <Header />\r\n        <Main />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}